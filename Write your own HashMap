//http://www.shuatiblog.com/blog/2014/07/01/Implement-Hashmap/
//http://www.cnblogs.com/-clq/archive/2012/01/11/2318870.html

/**
 * Created by jiazhangliu on 5/14/15.
 */
public class MyHashMap {
    float loadFactor;
    Node[] bucket;
    int size;

    public MyHashMap(int initialSize, float loadFactor){
        if(initialSize < 0 || loadFactor <= 0) {
            return;
        }
        // for generic types, need to create a new array in this form!!!
        bucket = new Node[initialSize];
        this.loadFactor = loadFactor;
        this.size = 0;
    }

    public String get(int key) {
        int hash = hash(key);
        int i = indexFor(hash, bucket.length);
        Node n = bucket[i];

        while(n != null) {
            if(n.hashValue == hash && n.key == key){
                return n.value;
            }
            n = n.next;
        }

        return null;
    }

    public void put(int key, String value) {
        int hash = hash(key);
        int i = indexFor(hash, bucket.length);
        Node n = bucket[i];

        while(n != null ) {
            if(n.hashValue == hash && n.key == key) {
                n.value = value;
                return;
            }
            n = n.next;
        }
        if(size < bucket.length * loadFactor) {
            if(n == null) {
                bucket[i] = new Node(key, value, hash, null);
            } else {
                n.next = new Node(key, value, hash, null);
            }
            size++;
            return;
        }

        addEntry(key, value);
    }

    public static void main(String[] args) {
        MyHashMap map = new MyHashMap(16, 0.5f);
        map.put(1, "a");
        map.put(2, "b");
        map.put(3, "c");
        System.err.println(map.get(1));
        System.err.println(map.get(2));
        System.err.println(map.get(3));
        map.put(1, "Spider Man");
        map.put(4, "d");
        map.put(3, "Peter Parker");
        System.err.println(map.get(1));
        System.err.println(map.get(2));
        System.err.println(map.get(3));
        System.err.println(map.get(4));
        System.err.println(map.get(5));
    }

    public void addEntry(int key, String value){
        int hash = hash(key);
        int i = indexFor(hash, bucket.length);


        Node[] tmp = new Node[bucket.length * 2];
        for(int j = 0; j < bucket.length; j++) {
            tmp[j] = bucket[j];
        }
        bucket = tmp;

        bucket[i] = new Node(key, value, hash, null);
        size++;
    }

    int indexFor(int h, int length) {
        return h & (length - 1);
    }

    final int hash(int code) {
        // this is the hash function from java 6 source code
        code ^= (code >>> 20) ^ (code >>> 12);
        return code ^ (code >>> 7) ^ (code >>> 4);
    }

    class Node {
        int key;
        String value;
        int hashValue;
        Node next;

        Node(int key, String value, int hashValue, Node next) {
            this.key = key;
            this.value = value;
            this.hashValue = hashValue;
            this.next = next;
        }
    }
}
